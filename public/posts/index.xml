<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Aug 2024 14:43:53 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Keylogger part 1 -- Advanced Keylogger</title>
      <link>http://localhost:1313/posts/keylogger-pt1/</link>
      <pubDate>Fri, 30 Aug 2024 14:43:53 -0600</pubDate>
      <guid>http://localhost:1313/posts/keylogger-pt1/</guid>
      <description>0. Basic Keyloggers Basic keyloggers are commonly built using functions like GetAsyncKeyState or SetWindowsHookEx in the Windows API to capture keystrokes. These functions allow a program to intercept and record keyboard input by monitoring key presses and releases.&#xA;However, they are frequently monitored and easily detected by EDR/AV software because these security tools hook into the underlying native functions to identify suspicious activity. To evade detection, more advanced techniques, such as using direct system calls (syscalls), are used.</description>
    </item>
    <item>
      <title>Clipboard monitoring with evasions</title>
      <link>http://localhost:1313/posts/clipboard/</link>
      <pubDate>Fri, 30 Aug 2024 13:43:53 -0600</pubDate>
      <guid>http://localhost:1313/posts/clipboard/</guid>
      <description>Basic code void main() { HWND owner = GetConsoleWindow(); OpenClipboard(owner); owner = GetClipboardData(CF_TEXT); printf(&amp;#34;Clipboard: %s\n&amp;#34;, (char *)owner); CloseClipboard(); } In our basic code, we&amp;rsquo;re using 4 functions that we would like to evade. These are GetConsoleWindow(), OpenClipboard(), GetClipboardData() and CloseClipboard. Therefore, we need to understand what are the basic functions from the kernel these functions called.&#xA;OpenClipboard &amp;ndash;&amp;gt; NtUserOpenClipboard GetClipboardData &amp;ndash;&amp;gt; NtUserGetClipboardData CloseClipboard &amp;ndash;&amp;gt; NtUserCloseClipboard&#xA;GetConsoleWindow() More complex but &amp;ndash;&amp;gt; ntdll.</description>
    </item>
    <item>
      <title>Introducing Poison</title>
      <link>http://localhost:1313/posts/introducing-poison/</link>
      <pubDate>Tue, 30 Aug 2022 13:43:53 -0600</pubDate>
      <guid>http://localhost:1313/posts/introducing-poison/</guid>
      <description>&lt;p&gt;&lt;em&gt;Poison&lt;/em&gt; is a &lt;strong&gt;clean&lt;/strong&gt;, &lt;strong&gt;professional&lt;/strong&gt; Hugo theme designed to &lt;strong&gt;captivate&lt;/strong&gt; your readers.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s also &lt;strong&gt;tiny&lt;/strong&gt; and &lt;strong&gt;privacy conscious&lt;/strong&gt;.  No JavaScript frameworks, icon packs, or Google fonts.  No ads or trackers polluting your console window.  &lt;strong&gt;We kept things simple&lt;/strong&gt;.  A little vanilla JavaScript, a dash of CSS, and the power of Hugo.&lt;/p&gt;&#xA;&lt;p&gt;All the static assets for the site (JS files, CSS, and fonts) are located within the theme&amp;rsquo;s &lt;em&gt;/assets/&lt;/em&gt; directory.  &lt;strong&gt;That way you know &lt;em&gt;exactly&lt;/em&gt; what&amp;rsquo;s going onto your site&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Check out our demo site&amp;rsquo;s analytics &lt;a href=&#34;https://plausible.lukeorth.com/poison.lukeorth.com&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; to gauge community interest in the theme.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
